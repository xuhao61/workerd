name: Publish types to NPM
on:
# Since we still need to manually upload binaries, use manual run
# Ideally this would trigger off `release`
  workflow_dispatch:
    inputs:
      patch:
        description: 'Patch Version'
        required: true
        default: '0'
      prerelease:
        description: 'Is Prerelease'
        type: boolean
        default: false

jobs:
  version:
    outputs:
      version: ${{ steps.echo.outputs.version }}
      date: ${{ steps.echo.outputs.date }}
      release_version: ${{ steps.echo.outputs.release_version }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - id: echo
        run: |
          echo "date=$(cat src/workerd/io/supported-compatibility-date.txt)" >> $GITHUB_OUTPUT;
          echo "version=${{ inputs.prerelease == false && '4' || '0'}}.$(cat src/workerd/io/supported-compatibility-date.txt | tr -d '-').${{ inputs.patch }}" >> $GITHUB_OUTPUT;
          echo "release_version=1.$(cat src/workerd/io/supported-compatibility-date.txt | tr -d '-').0" >> $GITHUB_OUTPUT;
  build-and-publish-types:
    runs-on: ubuntu-22.04
    needs: version
    steps:
      - uses: actions/checkout@v4
      - name: Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/bazel-disk-cache
          # The types cache is significantly smaller than the whole cache (350MB as of writing), so
          # we can probably afford for it to have its own cache key.
          key: bazel-disk-cache-types-${{ runner.os }}-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE') }}

      - name: install dependencies
        run: |
            export DEBIAN_FRONTEND=noninteractive
      - name: build types
        run: |
            bazel build --disk_cache=~/bazel-disk-cache  --remote_cache=https://bazel:${{ secrets.BAZEL_CACHE_KEY }}@bazel-remote-cache.devprod.cloudflare.dev //types:types
      - name: Build package
        run: node npm/scripts/build-types-package.mjs
        env:
          WORKERD_VERSION: ${{ needs.version.outputs.version }}
          LATEST_COMPATIBILITY_DATE: ${{ needs.version.outputs.date }}
      - run: cp -r bazel-bin/types/definitions/. npm/workers-types
      - run: cp npm/workers-types/oldest/* npm/workers-types
      - run: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > npm/workers-types/.npmrc
      - run: cd npm/workers-types && npm publish --access public --tag ${{ inputs.prerelease == true && 'alpha' || 'latest'}}
        env:
          NPM_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
